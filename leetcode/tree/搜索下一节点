#coding:utf-8

'''
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。
'''

class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None
        self.pre = None


class Solution:
    def getNextNode(self, node):
        if not node:
            return
        # 当节点存在右子树，找到右子树的最左叶子节点
        if node.right:
            node = node.right
            while node.left:
                node = node.left
            return node.val
        # 节点不是根节点，如果该节点是父节点的左孩子，则返回父节点;
        # 否则继续向上遍历其父节点的父节点，重复之前的判断，返回结果
        while node.pre:
            if node.pre.left == node:
                return node.pre.val
            node = node.pre
        return None